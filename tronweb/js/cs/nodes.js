// Generated by CoffeeScript 1.6.3
(function() {
  var NodeInlineView, NodeModel, NodePoolInlineView, NodePoolModel, _ref, _ref1, _ref2, _ref3,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  NodeModel = (function(_super) {
    __extends(NodeModel, _super);

    function NodeModel() {
      _ref = NodeModel.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return NodeModel;

  })(Backbone.Model);

  NodePoolModel = (function(_super) {
    __extends(NodePoolModel, _super);

    function NodePoolModel() {
      _ref1 = NodePoolModel.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    return NodePoolModel;

  })(Backbone.Model);

  NodeInlineView = (function(_super) {
    __extends(NodeInlineView, _super);

    function NodeInlineView() {
      this.render = __bind(this.render, this);
      _ref2 = NodeInlineView.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    NodeInlineView.prototype.tagName = "span";

    NodeInlineView.prototype.template = _.template("<span class=\"tt-enable\" title=\"<%= username %>@<%= hostname %>:<%= port %>\">\n    <%= name %>\n</span>");

    NodeInlineView.prototype.render = function() {
      this.$el.html(this.template(this.model.attributes));
      return this;
    };

    return NodeInlineView;

  })(Backbone.View);

  NodePoolInlineView = (function(_super) {
    __extends(NodePoolInlineView, _super);

    function NodePoolInlineView() {
      this.render = __bind(this.render, this);
      _ref3 = NodePoolInlineView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    NodePoolInlineView.prototype.tagName = "span";

    NodePoolInlineView.prototype.template = _.template("<span class=\"tt-enable\" title=\"<%= nodes.length %> node(s)\">\n    <%= name %>\n</span>");

    NodePoolInlineView.prototype.render = function() {
      this.$el.html(this.template(this.model.attributes));
      return this;
    };

    return NodePoolInlineView;

  })(Backbone.View);

  window.displayNode = function(node) {
    return new NodeInlineView({
      model: new NodeModel(node)
    }).render().$el.html();
  };

  window.displayNodePool = function(pool) {
    return new NodePoolInlineView({
      model: new NodePoolModel(pool)
    }).render().$el.html();
  };

}).call(this);
